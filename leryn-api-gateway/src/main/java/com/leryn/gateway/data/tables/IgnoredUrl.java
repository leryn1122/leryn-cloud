/*
 * This file is generated by jOOQ.
 */
package com.leryn.gateway.data.tables;


import com.leryn.gateway.data.Gateway;
import com.leryn.gateway.data.Keys;
import com.leryn.gateway.data.tables.records.IgnoredUrlRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 忽略认证而放行URL路径
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IgnoredUrl extends TableImpl<IgnoredUrlRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>gateway.ignored_url</code>
     */
    public static final IgnoredUrl IGNORED_URL = new IgnoredUrl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IgnoredUrlRecord> getRecordType() {
        return IgnoredUrlRecord.class;
    }

    /**
     * The column <code>gateway.ignored_url.id</code>. 代理主键
     */
    public final TableField<IgnoredUrlRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "代理主键");

    /**
     * The column <code>gateway.ignored_url.url</code>. URL路径
     */
    public final TableField<IgnoredUrlRecord, String> URL = createField(DSL.name("url"), SQLDataType.VARCHAR(100).nullable(false), this, "URL路径");

    /**
     * The column <code>gateway.ignored_url.create_time</code>. 创建时间
     */
    public final TableField<IgnoredUrlRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>gateway.ignored_url.modified_time</code>. 修改时间
     */
    public final TableField<IgnoredUrlRecord, LocalDateTime> MODIFIED_TIME = createField(DSL.name("modified_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "修改时间");

    private IgnoredUrl(Name alias, Table<IgnoredUrlRecord> aliased) {
        this(alias, aliased, null);
    }

    private IgnoredUrl(Name alias, Table<IgnoredUrlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("忽略认证而放行URL路径"), TableOptions.table());
    }

    /**
     * Create an aliased <code>gateway.ignored_url</code> table reference
     */
    public IgnoredUrl(String alias) {
        this(DSL.name(alias), IGNORED_URL);
    }

    /**
     * Create an aliased <code>gateway.ignored_url</code> table reference
     */
    public IgnoredUrl(Name alias) {
        this(alias, IGNORED_URL);
    }

    /**
     * Create a <code>gateway.ignored_url</code> table reference
     */
    public IgnoredUrl() {
        this(DSL.name("ignored_url"), null);
    }

    public <O extends Record> IgnoredUrl(Table<O> child, ForeignKey<O, IgnoredUrlRecord> key) {
        super(child, key, IGNORED_URL);
    }

    @Override
    public Schema getSchema() {
        return Gateway.GATEWAY;
    }

    @Override
    public Identity<IgnoredUrlRecord, Integer> getIdentity() {
        return (Identity<IgnoredUrlRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<IgnoredUrlRecord> getPrimaryKey() {
        return Keys.KEY_IGNORED_URL_PRIMARY;
    }

    @Override
    public List<UniqueKey<IgnoredUrlRecord>> getKeys() {
        return Arrays.<UniqueKey<IgnoredUrlRecord>>asList(Keys.KEY_IGNORED_URL_PRIMARY, Keys.KEY_IGNORED_URL_IGNORED_URL_UN);
    }

    @Override
    public IgnoredUrl as(String alias) {
        return new IgnoredUrl(DSL.name(alias), this);
    }

    @Override
    public IgnoredUrl as(Name alias) {
        return new IgnoredUrl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IgnoredUrl rename(String name) {
        return new IgnoredUrl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IgnoredUrl rename(Name name) {
        return new IgnoredUrl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
