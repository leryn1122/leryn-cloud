/*
 * This file is generated by jOOQ.
 */
package com.leryn.gateway.data.tables.records;


import com.leryn.gateway.data.tables.RouterTable;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 路由表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RouterTableRecord extends UpdatableRecordImpl<RouterTableRecord> implements Record11<Integer, String, String, String, Boolean, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>gateway.router_table.id</code>. 代理主键
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>gateway.router_table.id</code>. 代理主键
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>gateway.router_table.router_id</code>. 路由ID
     */
    public void setRouterId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gateway.router_table.router_id</code>. 路由ID
     */
    public String getRouterId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gateway.router_table.url_prefix</code>. URL前缀
     */
    public void setUrlPrefix(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>gateway.router_table.url_prefix</code>. URL前缀
     */
    public String getUrlPrefix() {
        return (String) get(2);
    }

    /**
     * Setter for <code>gateway.router_table.route_host</code>. 路由地址
     */
    public void setRouteHost(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>gateway.router_table.route_host</code>. 路由地址
     */
    public String getRouteHost() {
        return (String) get(3);
    }

    /**
     * Setter for <code>gateway.router_table.rewrite</code>. 是否重写URL路径
     */
    public void setRewrite(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>gateway.router_table.rewrite</code>. 是否重写URL路径
     */
    public Boolean getRewrite() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>gateway.router_table.rewrite_regexp</code>. 重写表达式(Spring Cloud标准)
     */
    public void setRewriteRegexp(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>gateway.router_table.rewrite_regexp</code>. 重写表达式(Spring Cloud标准)
     */
    public String getRewriteRegexp() {
        return (String) get(5);
    }

    /**
     * Setter for <code>gateway.router_table.rewrite_target</code>. 重写表达式(Spring Cloud标准)
     */
    public void setRewriteTarget(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>gateway.router_table.rewrite_target</code>. 重写表达式(Spring Cloud标准)
     */
    public String getRewriteTarget() {
        return (String) get(6);
    }

    /**
     * Setter for <code>gateway.router_table.api_version</code>. API版本(如v1,v2等)
     */
    public void setApiVersion(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>gateway.router_table.api_version</code>. API版本(如v1,v2等)
     */
    public String getApiVersion() {
        return (String) get(7);
    }

    /**
     * Setter for <code>gateway.router_table.profile</code>. 环境, profile
     */
    public void setProfile(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>gateway.router_table.profile</code>. 环境, profile
     */
    public String getProfile() {
        return (String) get(8);
    }

    /**
     * Setter for <code>gateway.router_table.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>gateway.router_table.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>gateway.router_table.modified_time</code>. 修改时间
     */
    public void setModifiedTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>gateway.router_table.modified_time</code>. 修改时间
     */
    public LocalDateTime getModifiedTime() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, String, Boolean, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, String, String, String, Boolean, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RouterTable.ROUTER_TABLE.ID;
    }

    @Override
    public Field<String> field2() {
        return RouterTable.ROUTER_TABLE.ROUTER_ID;
    }

    @Override
    public Field<String> field3() {
        return RouterTable.ROUTER_TABLE.URL_PREFIX;
    }

    @Override
    public Field<String> field4() {
        return RouterTable.ROUTER_TABLE.ROUTE_HOST;
    }

    @Override
    public Field<Boolean> field5() {
        return RouterTable.ROUTER_TABLE.REWRITE;
    }

    @Override
    public Field<String> field6() {
        return RouterTable.ROUTER_TABLE.REWRITE_REGEXP;
    }

    @Override
    public Field<String> field7() {
        return RouterTable.ROUTER_TABLE.REWRITE_TARGET;
    }

    @Override
    public Field<String> field8() {
        return RouterTable.ROUTER_TABLE.API_VERSION;
    }

    @Override
    public Field<String> field9() {
        return RouterTable.ROUTER_TABLE.PROFILE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return RouterTable.ROUTER_TABLE.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return RouterTable.ROUTER_TABLE.MODIFIED_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRouterId();
    }

    @Override
    public String component3() {
        return getUrlPrefix();
    }

    @Override
    public String component4() {
        return getRouteHost();
    }

    @Override
    public Boolean component5() {
        return getRewrite();
    }

    @Override
    public String component6() {
        return getRewriteRegexp();
    }

    @Override
    public String component7() {
        return getRewriteTarget();
    }

    @Override
    public String component8() {
        return getApiVersion();
    }

    @Override
    public String component9() {
        return getProfile();
    }

    @Override
    public LocalDateTime component10() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component11() {
        return getModifiedTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRouterId();
    }

    @Override
    public String value3() {
        return getUrlPrefix();
    }

    @Override
    public String value4() {
        return getRouteHost();
    }

    @Override
    public Boolean value5() {
        return getRewrite();
    }

    @Override
    public String value6() {
        return getRewriteRegexp();
    }

    @Override
    public String value7() {
        return getRewriteTarget();
    }

    @Override
    public String value8() {
        return getApiVersion();
    }

    @Override
    public String value9() {
        return getProfile();
    }

    @Override
    public LocalDateTime value10() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value11() {
        return getModifiedTime();
    }

    @Override
    public RouterTableRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RouterTableRecord value2(String value) {
        setRouterId(value);
        return this;
    }

    @Override
    public RouterTableRecord value3(String value) {
        setUrlPrefix(value);
        return this;
    }

    @Override
    public RouterTableRecord value4(String value) {
        setRouteHost(value);
        return this;
    }

    @Override
    public RouterTableRecord value5(Boolean value) {
        setRewrite(value);
        return this;
    }

    @Override
    public RouterTableRecord value6(String value) {
        setRewriteRegexp(value);
        return this;
    }

    @Override
    public RouterTableRecord value7(String value) {
        setRewriteTarget(value);
        return this;
    }

    @Override
    public RouterTableRecord value8(String value) {
        setApiVersion(value);
        return this;
    }

    @Override
    public RouterTableRecord value9(String value) {
        setProfile(value);
        return this;
    }

    @Override
    public RouterTableRecord value10(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public RouterTableRecord value11(LocalDateTime value) {
        setModifiedTime(value);
        return this;
    }

    @Override
    public RouterTableRecord values(Integer value1, String value2, String value3, String value4, Boolean value5, String value6, String value7, String value8, String value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RouterTableRecord
     */
    public RouterTableRecord() {
        super(RouterTable.ROUTER_TABLE);
    }

    /**
     * Create a detached, initialised RouterTableRecord
     */
    public RouterTableRecord(Integer id, String routerId, String urlPrefix, String routeHost, Boolean rewrite, String rewriteRegexp, String rewriteTarget, String apiVersion, String profile, LocalDateTime createTime, LocalDateTime modifiedTime) {
        super(RouterTable.ROUTER_TABLE);

        setId(id);
        setRouterId(routerId);
        setUrlPrefix(urlPrefix);
        setRouteHost(routeHost);
        setRewrite(rewrite);
        setRewriteRegexp(rewriteRegexp);
        setRewriteTarget(rewriteTarget);
        setApiVersion(apiVersion);
        setProfile(profile);
        setCreateTime(createTime);
        setModifiedTime(modifiedTime);
    }
}
