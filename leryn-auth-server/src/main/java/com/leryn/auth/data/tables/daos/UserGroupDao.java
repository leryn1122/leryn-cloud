/*
 * This file is generated by jOOQ.
 */
package com.leryn.auth.data.tables.daos;


import com.leryn.auth.data.tables.UserGroup;
import com.leryn.auth.data.tables.records.UserGroupRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 用户组表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserGroupDao extends DAOImpl<UserGroupRecord, com.leryn.auth.data.tables.pojos.UserGroup, Integer> {

    /**
     * Create a new UserGroupDao without any configuration
     */
    public UserGroupDao() {
        super(UserGroup.USER_GROUP, com.leryn.auth.data.tables.pojos.UserGroup.class);
    }

    /**
     * Create a new UserGroupDao with an attached configuration
     */
    @Autowired
    public UserGroupDao(Configuration configuration) {
        super(UserGroup.USER_GROUP, com.leryn.auth.data.tables.pojos.UserGroup.class, configuration);
    }

    @Override
    public Integer getId(com.leryn.auth.data.tables.pojos.UserGroup object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserGroup.USER_GROUP.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchById(Integer... values) {
        return fetch(UserGroup.USER_GROUP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.leryn.auth.data.tables.pojos.UserGroup fetchOneById(Integer value) {
        return fetchOne(UserGroup.USER_GROUP.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserGroup.USER_GROUP.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchByName(String... values) {
        return fetch(UserGroup.USER_GROUP.NAME, values);
    }

    /**
     * Fetch records that have <code>parent_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchRangeOfParentId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserGroup.USER_GROUP.PARENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent_id IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchByParentId(Integer... values) {
        return fetch(UserGroup.USER_GROUP.PARENT_ID, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserGroup.USER_GROUP.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchByCreateTime(LocalDateTime... values) {
        return fetch(UserGroup.USER_GROUP.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modified_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchRangeOfModifiedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserGroup.USER_GROUP.MODIFIED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_time IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.UserGroup> fetchByModifiedTime(LocalDateTime... values) {
        return fetch(UserGroup.USER_GROUP.MODIFIED_TIME, values);
    }
}
