/*
 * This file is generated by jOOQ.
 */
package com.leryn.auth.data.tables.records;


import com.leryn.auth.data.tables.Api;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * API表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApiRecord extends UpdatableRecordImpl<ApiRecord> implements Record4<Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>idaas.api.id</code>. 代理主键
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>idaas.api.id</code>. 代理主键
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>idaas.api.url</code>. Restful风格的API URL
     */
    public void setUrl(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>idaas.api.url</code>. Restful风格的API URL
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>idaas.api.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>idaas.api.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>idaas.api.modified_time</code>. 修改时间
     */
    public void setModifiedTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>idaas.api.modified_time</code>. 修改时间
     */
    public LocalDateTime getModifiedTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Api.API.ID;
    }

    @Override
    public Field<String> field2() {
        return Api.API.URL;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Api.API.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Api.API.MODIFIED_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component4() {
        return getModifiedTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value4() {
        return getModifiedTime();
    }

    @Override
    public ApiRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ApiRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public ApiRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public ApiRecord value4(LocalDateTime value) {
        setModifiedTime(value);
        return this;
    }

    @Override
    public ApiRecord values(Integer value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiRecord
     */
    public ApiRecord() {
        super(Api.API);
    }

    /**
     * Create a detached, initialised ApiRecord
     */
    public ApiRecord(Integer id, String url, LocalDateTime createTime, LocalDateTime modifiedTime) {
        super(Api.API);

        setId(id);
        setUrl(url);
        setCreateTime(createTime);
        setModifiedTime(modifiedTime);
    }
}
