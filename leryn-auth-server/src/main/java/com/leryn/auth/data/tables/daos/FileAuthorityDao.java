/*
 * This file is generated by jOOQ.
 */
package com.leryn.auth.data.tables.daos;


import com.leryn.auth.data.tables.FileAuthority;
import com.leryn.auth.data.tables.records.FileAuthorityRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 文件权限表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FileAuthorityDao extends DAOImpl<FileAuthorityRecord, com.leryn.auth.data.tables.pojos.FileAuthority, Integer> {

    /**
     * Create a new FileAuthorityDao without any configuration
     */
    public FileAuthorityDao() {
        super(FileAuthority.FILE_AUTHORITY, com.leryn.auth.data.tables.pojos.FileAuthority.class);
    }

    /**
     * Create a new FileAuthorityDao with an attached configuration
     */
    @Autowired
    public FileAuthorityDao(Configuration configuration) {
        super(FileAuthority.FILE_AUTHORITY, com.leryn.auth.data.tables.pojos.FileAuthority.class, configuration);
    }

    @Override
    public Integer getId(com.leryn.auth.data.tables.pojos.FileAuthority object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.FileAuthority> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(FileAuthority.FILE_AUTHORITY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.FileAuthority> fetchById(Integer... values) {
        return fetch(FileAuthority.FILE_AUTHORITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.leryn.auth.data.tables.pojos.FileAuthority fetchOneById(Integer value) {
        return fetchOne(FileAuthority.FILE_AUTHORITY.ID, value);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.FileAuthority> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(FileAuthority.FILE_AUTHORITY.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.FileAuthority> fetchByCreateTime(LocalDateTime... values) {
        return fetch(FileAuthority.FILE_AUTHORITY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modified_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.FileAuthority> fetchRangeOfModifiedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(FileAuthority.FILE_AUTHORITY.MODIFIED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_time IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.FileAuthority> fetchByModifiedTime(LocalDateTime... values) {
        return fetch(FileAuthority.FILE_AUTHORITY.MODIFIED_TIME, values);
    }
}
