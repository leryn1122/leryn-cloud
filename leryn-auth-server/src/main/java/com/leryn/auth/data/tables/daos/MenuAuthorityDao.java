/*
 * This file is generated by jOOQ.
 */
package com.leryn.auth.data.tables.daos;


import com.leryn.auth.data.tables.MenuAuthority;
import com.leryn.auth.data.tables.records.MenuAuthorityRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 菜单权限表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MenuAuthorityDao extends DAOImpl<MenuAuthorityRecord, com.leryn.auth.data.tables.pojos.MenuAuthority, Integer> {

    /**
     * Create a new MenuAuthorityDao without any configuration
     */
    public MenuAuthorityDao() {
        super(MenuAuthority.MENU_AUTHORITY, com.leryn.auth.data.tables.pojos.MenuAuthority.class);
    }

    /**
     * Create a new MenuAuthorityDao with an attached configuration
     */
    @Autowired
    public MenuAuthorityDao(Configuration configuration) {
        super(MenuAuthority.MENU_AUTHORITY, com.leryn.auth.data.tables.pojos.MenuAuthority.class, configuration);
    }

    @Override
    public Integer getId(com.leryn.auth.data.tables.pojos.MenuAuthority object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.MenuAuthority> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MenuAuthority.MENU_AUTHORITY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.MenuAuthority> fetchById(Integer... values) {
        return fetch(MenuAuthority.MENU_AUTHORITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.leryn.auth.data.tables.pojos.MenuAuthority fetchOneById(Integer value) {
        return fetchOne(MenuAuthority.MENU_AUTHORITY.ID, value);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.MenuAuthority> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MenuAuthority.MENU_AUTHORITY.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.MenuAuthority> fetchByCreateTime(LocalDateTime... values) {
        return fetch(MenuAuthority.MENU_AUTHORITY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modified_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.leryn.auth.data.tables.pojos.MenuAuthority> fetchRangeOfModifiedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MenuAuthority.MENU_AUTHORITY.MODIFIED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_time IN (values)</code>
     */
    public List<com.leryn.auth.data.tables.pojos.MenuAuthority> fetchByModifiedTime(LocalDateTime... values) {
        return fetch(MenuAuthority.MENU_AUTHORITY.MODIFIED_TIME, values);
    }
}
