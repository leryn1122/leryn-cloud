/*
 * This file is generated by jOOQ.
 */
package com.leryn.auth.data;


import com.leryn.auth.data.tables.Api;
import com.leryn.auth.data.tables.Authority;
import com.leryn.auth.data.tables.AuthorityApiRelation;
import com.leryn.auth.data.tables.AuthorityFileRelation;
import com.leryn.auth.data.tables.AuthorityMenuRelation;
import com.leryn.auth.data.tables.AuthorityPageElementRelation;
import com.leryn.auth.data.tables.FileAuthority;
import com.leryn.auth.data.tables.MenuAuthority;
import com.leryn.auth.data.tables.PageElementAuthority;
import com.leryn.auth.data.tables.Role;
import com.leryn.auth.data.tables.RoleAuthorityRelation;
import com.leryn.auth.data.tables.User;
import com.leryn.auth.data.tables.UserGroup;
import com.leryn.auth.data.tables.UserGroupRoleRelation;
import com.leryn.auth.data.tables.UserUserGroupRelation;
import com.leryn.auth.data.tables.records.ApiRecord;
import com.leryn.auth.data.tables.records.AuthorityApiRelationRecord;
import com.leryn.auth.data.tables.records.AuthorityFileRelationRecord;
import com.leryn.auth.data.tables.records.AuthorityMenuRelationRecord;
import com.leryn.auth.data.tables.records.AuthorityPageElementRelationRecord;
import com.leryn.auth.data.tables.records.AuthorityRecord;
import com.leryn.auth.data.tables.records.FileAuthorityRecord;
import com.leryn.auth.data.tables.records.MenuAuthorityRecord;
import com.leryn.auth.data.tables.records.PageElementAuthorityRecord;
import com.leryn.auth.data.tables.records.RoleAuthorityRelationRecord;
import com.leryn.auth.data.tables.records.RoleRecord;
import com.leryn.auth.data.tables.records.UserGroupRecord;
import com.leryn.auth.data.tables.records.UserGroupRoleRelationRecord;
import com.leryn.auth.data.tables.records.UserRecord;
import com.leryn.auth.data.tables.records.UserUserGroupRelationRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * idaas.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ApiRecord> KEY_API_PRIMARY = Internal.createUniqueKey(Api.API, DSL.name("KEY_api_PRIMARY"), new TableField[] { Api.API.ID }, true);
    public static final UniqueKey<AuthorityRecord> KEY_AUTHORITY_PRIMARY = Internal.createUniqueKey(Authority.AUTHORITY, DSL.name("KEY_authority_PRIMARY"), new TableField[] { Authority.AUTHORITY.ID }, true);
    public static final UniqueKey<AuthorityApiRelationRecord> KEY_AUTHORITY_API_RELATION_PRIMARY = Internal.createUniqueKey(AuthorityApiRelation.AUTHORITY_API_RELATION, DSL.name("KEY_authority_api_relation_PRIMARY"), new TableField[] { AuthorityApiRelation.AUTHORITY_API_RELATION.ID }, true);
    public static final UniqueKey<AuthorityFileRelationRecord> KEY_AUTHORITY_FILE_RELATION_PRIMARY = Internal.createUniqueKey(AuthorityFileRelation.AUTHORITY_FILE_RELATION, DSL.name("KEY_authority_file_relation_PRIMARY"), new TableField[] { AuthorityFileRelation.AUTHORITY_FILE_RELATION.ID }, true);
    public static final UniqueKey<AuthorityMenuRelationRecord> KEY_AUTHORITY_MENU_RELATION_PRIMARY = Internal.createUniqueKey(AuthorityMenuRelation.AUTHORITY_MENU_RELATION, DSL.name("KEY_authority_menu_relation_PRIMARY"), new TableField[] { AuthorityMenuRelation.AUTHORITY_MENU_RELATION.ID }, true);
    public static final UniqueKey<AuthorityPageElementRelationRecord> KEY_AUTHORITY_PAGE_ELEMENT_RELATION_PRIMARY = Internal.createUniqueKey(AuthorityPageElementRelation.AUTHORITY_PAGE_ELEMENT_RELATION, DSL.name("KEY_authority_page_element_relation_PRIMARY"), new TableField[] { AuthorityPageElementRelation.AUTHORITY_PAGE_ELEMENT_RELATION.ID }, true);
    public static final UniqueKey<FileAuthorityRecord> KEY_FILE_AUTHORITY_PRIMARY = Internal.createUniqueKey(FileAuthority.FILE_AUTHORITY, DSL.name("KEY_file_authority_PRIMARY"), new TableField[] { FileAuthority.FILE_AUTHORITY.ID }, true);
    public static final UniqueKey<MenuAuthorityRecord> KEY_MENU_AUTHORITY_PRIMARY = Internal.createUniqueKey(MenuAuthority.MENU_AUTHORITY, DSL.name("KEY_menu_authority_PRIMARY"), new TableField[] { MenuAuthority.MENU_AUTHORITY.ID }, true);
    public static final UniqueKey<PageElementAuthorityRecord> KEY_PAGE_ELEMENT_AUTHORITY_PRIMARY = Internal.createUniqueKey(PageElementAuthority.PAGE_ELEMENT_AUTHORITY, DSL.name("KEY_page_element_authority_PRIMARY"), new TableField[] { PageElementAuthority.PAGE_ELEMENT_AUTHORITY.ID }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_role_PRIMARY"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<RoleAuthorityRelationRecord> KEY_ROLE_AUTHORITY_RELATION_PRIMARY = Internal.createUniqueKey(RoleAuthorityRelation.ROLE_AUTHORITY_RELATION, DSL.name("KEY_role_authority_relation_PRIMARY"), new TableField[] { RoleAuthorityRelation.ROLE_AUTHORITY_RELATION.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_USER_UN = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_user_UN"), new TableField[] { User.USER.USER_ID }, true);
    public static final UniqueKey<UserGroupRecord> KEY_USER_GROUP_PRIMARY = Internal.createUniqueKey(UserGroup.USER_GROUP, DSL.name("KEY_user_group_PRIMARY"), new TableField[] { UserGroup.USER_GROUP.ID }, true);
    public static final UniqueKey<UserGroupRoleRelationRecord> KEY_USER_GROUP_ROLE_RELATION_PRIMARY = Internal.createUniqueKey(UserGroupRoleRelation.USER_GROUP_ROLE_RELATION, DSL.name("KEY_user_group_role_relation_PRIMARY"), new TableField[] { UserGroupRoleRelation.USER_GROUP_ROLE_RELATION.ID }, true);
    public static final UniqueKey<UserUserGroupRelationRecord> KEY_USER_USER_GROUP_RELATION_PRIMARY = Internal.createUniqueKey(UserUserGroupRelation.USER_USER_GROUP_RELATION, DSL.name("KEY_user_user_group_relation_PRIMARY"), new TableField[] { UserUserGroupRelation.USER_USER_GROUP_RELATION.ID }, true);
}
